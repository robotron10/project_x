https://github.com/arduino/ArduinoCore-avr/blob/master/cores/arduino/main.cpp
https://www.arduinoclub.de/2016/04/09/arduino-ide-bibliotheken-hinzufuegen/
https://arduino.stackexchange.com/questions/40393/what-is-the-relationship-of-an-arduino-ino-file-to-main-cpp
https://www.arduino.cc/en/Hacking/LibraryTutorial

## Pfadsuche der IDE
~/Downloads/<Arduino-Programm>/libraries/
~/Downloads/<Arduino-Programm>/hardware/arduino/avr/libraries
~/Arduino/libraries/
~/Sketchbook/libraries/

## eigene lib (Funktion)
~/Arduino/libraries/deineLib/
-> deineLib.h
-> deineLib.cpp

Im Code kannst du diese dann mit #include aufrufen.

Also im Ordner „libraries“ erstellst du ein Unterverzeichnis das genauso heist wie deine Lib, in diesem Verzeichnis ist mindestens eine *.h und *.cpp, alles ungepackt.

##

The base Arduino source files are in the Arduino installation, under hardware/*/cores/. Source for additional libraries included are in libraries/. Additional files may be found in the sketchbook under its hardware/*/cores/ and libraries/ directories.

And don't forget /usr/lib/avr/include/ or whatever that translates to on non-Linux systems.


## die Arduino-main.cpp
/*
  main.cpp - Main loop for Arduino sketches
  Copyright (c) 2005-2013 Arduino Team.  All right reserved.
  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.
  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.
  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/

#include <Arduino.h>

// Declared weak in Arduino.h to allow user redefinitions.
int atexit(void (* /*func*/ )()) { return 0; }

// Weak empty variant initialization function.
// May be redefined by variant files.
void initVariant() __attribute__((weak));
void initVariant() { }

void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();

	initVariant();

#if defined(USBCON)
	USBDevice.attach();
#endif
	
	setup();
    
	for (;;) {
		loop();
		if (serialEventRun) serialEventRun();
	}
        
	return 0;
}
